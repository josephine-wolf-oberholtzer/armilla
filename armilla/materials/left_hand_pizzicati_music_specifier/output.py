# -*- encoding: utf-8 -*-
from abjad.tools import datastructuretools
from abjad.tools import indicatortools
from abjad.tools import pitchtools
from abjad.tools import rhythmmakertools
import consort


left_hand_pizzicati_music_specifier = consort.tools.MusicSpecifier(
    attachment_handler=consort.tools.AttachmentHandler(
        arpeggio=consort.tools.AttachmentExpression(
            attachments=datastructuretools.TypedList(
                [
                    indicatortools.Arpeggio(),
                    ]
                ),
            ),
        clef_spanner=consort.tools.AttachmentExpression(
            attachments=datastructuretools.TypedList(
                [
                    consort.tools.ClefSpanner(
                        clef=indicatortools.Clef(
                            name='treble',
                            ),
                        ),
                    ]
                ),
            ),
        ),
    pitch_handler=consort.tools.AbsolutePitchHandler(
        logical_tie_expressions=datastructuretools.CyclicTuple(
            [
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch("cs'"),
                            pitchtools.NamedPitch("b'"),
                            pitchtools.NamedPitch("g''"),
                            pitchtools.NamedPitch("ef'''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('fs'),
                            pitchtools.NamedPitch("e'"),
                            pitchtools.NamedPitch("c''"),
                            pitchtools.NamedPitch("gs''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('f'),
                            pitchtools.NamedPitch("ef'"),
                            pitchtools.NamedPitch("b'"),
                            pitchtools.NamedPitch("g''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('fs'),
                            pitchtools.NamedPitch("e'"),
                            pitchtools.NamedPitch("c''"),
                            pitchtools.NamedPitch("gs''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch("c'"),
                            pitchtools.NamedPitch("bf'"),
                            pitchtools.NamedPitch("fs''"),
                            pitchtools.NamedPitch("d'''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch("cs'"),
                            pitchtools.NamedPitch("b'"),
                            pitchtools.NamedPitch("g''"),
                            pitchtools.NamedPitch("ef'''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('f'),
                            pitchtools.NamedPitch("ef'"),
                            pitchtools.NamedPitch("b'"),
                            pitchtools.NamedPitch("g''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch('fs'),
                            pitchtools.NamedPitch("e'"),
                            pitchtools.NamedPitch("c''"),
                            pitchtools.NamedPitch("gs''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                consort.tools.ChordExpression(
                    chord_expr=pitchtools.PitchSegment(
                        (
                            pitchtools.NamedPitch("d'"),
                            pitchtools.NamedPitch("c''"),
                            pitchtools.NamedPitch("gs''"),
                            pitchtools.NamedPitch("e'''"),
                            ),
                        item_class=pitchtools.NamedPitch,
                        ),
                    ),
                ]
            ),
        ),
    rhythm_maker=rhythmmakertools.IncisedRhythmMaker(
        incise_specifier=rhythmmakertools.InciseSpecifier(
            prefix_talea=(1,),
            prefix_counts=(1, 1, 1, 1, 2, 1),
            suffix_talea=(1,),
            suffix_counts=(0,),
            talea_denominator=16,
            fill_with_notes=False,
            ),
        ),
    )